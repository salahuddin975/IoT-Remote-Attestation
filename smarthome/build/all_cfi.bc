; ModuleID = 'build/all.bc'
target datalayout = "e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armv7-unknown-linux-gnueabihf"

%struct.library = type { [4096 x i8], i32, i32 }
%struct.SHA256state_st = type { [8 x i32], i32, i32, [16 x i32], i32, i32 }
%struct.dl_phdr_info = type { i32, i8*, %struct.Elf32_Phdr*, i16, i64, i64, i32, i8* }
%struct.Elf32_Phdr = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.Customer = type { [100 x i8], i8* }
%union.pthread_attr_t = type { i32, [32 x i8] }

@num_libs = global i32 0, align 4
@.str = private unnamed_addr constant [30 x i8] c"name: %s; addr=%10p; size=%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"total size: %d \0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"\0ASHA-256 using random access segment: \0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@LAMP_1 = global i32 1, align 4
@LAMP_2 = global i32 1, align 4
@LAMP_3 = global i32 1, align 4
@LAMP_4 = global i32 1, align 4
@LAMP_5 = global i32 1, align 4
@attack_type = global i32 0, align 4
@exploit = common global [104 x i8] zeroinitializer, align 1
@name = common global [4 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"bind failed\00", align 1
@.str.1.6 = private unnamed_addr constant [9 x i8] c"len: %d\0A\00", align 1
@.str.2.7 = private unnamed_addr constant [15 x i8] c"buff addr: %p\0A\00", align 1
@.str.3.8 = private unnamed_addr constant [29 x i8] c"vulnerable: line no ---> 01\0A\00", align 1
@.str.4.9 = private unnamed_addr constant [29 x i8] c"vulnerable: line no ---> 02\0A\00", align 1
@.str.5.10 = private unnamed_addr constant [29 x i8] c"vulnerable: line no ---> 03\0A\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"addr: %p\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"my name is\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"./SmartHome (1: stack, 2: ret2libc, 3: heap)\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"running main program.\0A\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"Error!\0A\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"Can't start server!\0A\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"Error binding!\0A\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Wait for connection...\0A\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"lamp1\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"lamp 1 turned on\0A\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"lamp 1 turned off\0A\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"lamp2\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"lamp 2 turned off\0A\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"lamp 2 turned on\0A\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"lamp3\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"lamp 3 turned off\0A\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"lamp 3 turned on\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"lamp4\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"lamp 4 turned off\0A\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"lamp 4 turned on\0A\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"lamp5\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"lamp 5 turned off\0A\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"lamp 5 turned on\0A\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"shutdown\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"sudo ./off\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"server will shut down now\0A\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"received size: %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"received addr size: %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"Returned from vulnerable function.\0A\00", align 1

; Function Attrs: nounwind
define void @calculate_random_checksum(%struct.library* %libs, i32* %locations, i8* %hash_value) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 0, i8* %saved_retaddr_prolog)
  %1 = alloca %struct.library*, align 4
  %2 = alloca i32*, align 4
  %3 = alloca i8*, align 4
  %sha256 = alloca %struct.SHA256state_st, align 4
  %i = alloca i32, align 4
  %location = alloca i32, align 4
  %j = alloca i32, align 4
  %frac = alloca i32, align 4
  store %struct.library* %libs, %struct.library** %1, align 4
  store i32* %locations, i32** %2, align 4
  store i8* %hash_value, i8** %3, align 4
  %4 = call i32 @SHA256_Init(%struct.SHA256state_st* %sha256)
  store i32 0, i32* %i, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 0)
  br label %5

; <label>:5                                       ; preds = %85, %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 1)
  %6 = load i32, i32* %i, align 4
  %7 = icmp slt i32 %6, 50
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 1)
  br i1 %7, label %8, label %88

; <label>:8                                       ; preds = %5
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 2)
  %9 = load i32, i32* %i, align 4
  %10 = load i32*, i32** %2, align 4
  %11 = getelementptr inbounds i32, i32* %10, i32 %9
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %location, align 4
  store i32 0, i32* %j, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 2)
  br label %13

; <label>:13                                      ; preds = %81, %8
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 3)
  %14 = load i32, i32* %j, align 4
  %15 = load i32, i32* @num_libs, align 4
  %16 = icmp slt i32 %14, %15
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 3)
  br i1 %16, label %17, label %84

; <label>:17                                      ; preds = %13
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 4)
  %18 = load i32, i32* %location, align 4
  %19 = load i32, i32* %j, align 4
  %20 = load %struct.library*, %struct.library** %1, align 4
  %21 = getelementptr inbounds %struct.library, %struct.library* %20, i32 %19
  %22 = getelementptr inbounds %struct.library, %struct.library* %21, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %18, %23
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 4)
  br i1 %24, label %25, label %33

; <label>:25                                      ; preds = %17
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 5)
  %26 = load i32, i32* %location, align 4
  %27 = load i32, i32* %j, align 4
  %28 = load %struct.library*, %struct.library** %1, align 4
  %29 = getelementptr inbounds %struct.library, %struct.library* %28, i32 %27
  %30 = getelementptr inbounds %struct.library, %struct.library* %29, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 %26, %31
  store i32 %32, i32* %location, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 5)
  br label %81

; <label>:33                                      ; preds = %17
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 6)
  %34 = load i32, i32* %location, align 4
  %35 = add nsw i32 %34, 2000
  %36 = load i32, i32* %j, align 4
  %37 = load %struct.library*, %struct.library** %1, align 4
  %38 = getelementptr inbounds %struct.library, %struct.library* %37, i32 %36
  %39 = getelementptr inbounds %struct.library, %struct.library* %38, i32 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %35, %40
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 6)
  br i1 %41, label %42, label %52

; <label>:42                                      ; preds = %33
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 7)
  %43 = load i32, i32* %j, align 4
  %44 = load %struct.library*, %struct.library** %1, align 4
  %45 = getelementptr inbounds %struct.library, %struct.library* %44, i32 %43
  %46 = getelementptr inbounds %struct.library, %struct.library* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load i32, i32* %location, align 4
  %49 = add nsw i32 %47, %48
  %50 = inttoptr i32 %49 to i8*
  %51 = call i32 @SHA256_Update(%struct.SHA256state_st* %sha256, i8* %50, i32 2000)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 7)
  br label %84

; <label>:52                                      ; preds = %33
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 8)
  %53 = load i32, i32* %location, align 4
  %54 = add nsw i32 %53, 2000
  %55 = load i32, i32* %j, align 4
  %56 = load %struct.library*, %struct.library** %1, align 4
  %57 = getelementptr inbounds %struct.library, %struct.library* %56, i32 %55
  %58 = getelementptr inbounds %struct.library, %struct.library* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = sub nsw i32 %54, %59
  store i32 %60, i32* %frac, align 4
  %61 = load i32, i32* %j, align 4
  %62 = load %struct.library*, %struct.library** %1, align 4
  %63 = getelementptr inbounds %struct.library, %struct.library* %62, i32 %61
  %64 = getelementptr inbounds %struct.library, %struct.library* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* %location, align 4
  %67 = add nsw i32 %65, %66
  %68 = inttoptr i32 %67 to i8*
  %69 = load i32, i32* %frac, align 4
  %70 = sub nsw i32 2000, %69
  %71 = call i32 @SHA256_Update(%struct.SHA256state_st* %sha256, i8* %68, i32 %70)
  %72 = load i32, i32* %j, align 4
  %73 = add nsw i32 %72, 1
  %74 = load %struct.library*, %struct.library** %1, align 4
  %75 = getelementptr inbounds %struct.library, %struct.library* %74, i32 %73
  %76 = getelementptr inbounds %struct.library, %struct.library* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = inttoptr i32 %77 to i8*
  %79 = load i32, i32* %frac, align 4
  %80 = call i32 @SHA256_Update(%struct.SHA256state_st* %sha256, i8* %78, i32 %79)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 8)
  br label %84

; <label>:81                                      ; preds = %25
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 9)
  %82 = load i32, i32* %j, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %j, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 9)
  br label %13

; <label>:84                                      ; preds = %52, %42, %13
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 10)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 10)
  br label %85

; <label>:85                                      ; preds = %84
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 11)
  %86 = load i32, i32* %i, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %i, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 0, i32 11)
  br label %5

; <label>:88                                      ; preds = %5
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 0, i32 12)
  %89 = load i8*, i8** %3, align 4
  %90 = call i32 @SHA256_Final(i8* %89, %struct.SHA256state_st* %sha256)
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 0, i8* %saved_retaddr_epilog)
  ret void
}

declare i32 @SHA256_Init(%struct.SHA256state_st*) #1

declare i32 @SHA256_Update(%struct.SHA256state_st*, i8*, i32) #1

declare i32 @SHA256_Final(i8*, %struct.SHA256state_st*) #1

; Function Attrs: nounwind
define void @calculate_checksum(i8* %hash_value, i32 %seed) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 1, i8* %saved_retaddr_prolog)
  %1 = alloca i8*, align 4
  %2 = alloca i32, align 4
  %libs = alloca [200 x %struct.library], align 4
  %total_sz = alloca i32, align 4
  %i = alloca i32, align 4
  %random_locations = alloca [50 x i32], align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  store i8* %hash_value, i8** %1, align 4
  store i32 %seed, i32* %2, align 4
  store i32 0, i32* @num_libs, align 4
  %3 = getelementptr inbounds [200 x %struct.library], [200 x %struct.library]* %libs, i32 0, i32 0
  %4 = bitcast %struct.library* %3 to i8*
  %5 = call i32 @dl_iterate_phdr(i32 (%struct.dl_phdr_info*, i32, i8*)* @callback_set_lib_addr, i8* %4)
  store i32 0, i32* %total_sz, align 4
  store i32 0, i32* %i, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 0)
  br label %6

; <label>:6                                       ; preds = %30, %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 1)
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* @num_libs, align 4
  %9 = icmp slt i32 %7, %8
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 1)
  br i1 %9, label %10, label %33

; <label>:10                                      ; preds = %6
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 2)
  %11 = load i32, i32* %i, align 4
  %12 = getelementptr inbounds [200 x %struct.library], [200 x %struct.library]* %libs, i32 0, i32 %11
  %13 = getelementptr inbounds %struct.library, %struct.library* %12, i32 0, i32 0
  %14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i32 0, i32 0
  %15 = load i32, i32* %i, align 4
  %16 = getelementptr inbounds [200 x %struct.library], [200 x %struct.library]* %libs, i32 0, i32 %15
  %17 = getelementptr inbounds %struct.library, %struct.library* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* %i, align 4
  %20 = getelementptr inbounds [200 x %struct.library], [200 x %struct.library]* %libs, i32 0, i32 %19
  %21 = getelementptr inbounds %struct.library, %struct.library* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0), i8* %14, i32 %18, i32 %22)
  %24 = load i32, i32* %i, align 4
  %25 = getelementptr inbounds [200 x %struct.library], [200 x %struct.library]* %libs, i32 0, i32 %24
  %26 = getelementptr inbounds %struct.library, %struct.library* %25, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %total_sz, align 4
  %29 = add nsw i32 %28, %27
  store i32 %29, i32* %total_sz, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 2)
  br label %30

; <label>:30                                      ; preds = %10
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 3)
  %31 = load i32, i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 3)
  br label %6

; <label>:33                                      ; preds = %6
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 4)
  %34 = load i32, i32* %total_sz, align 4
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i32 0, i32 0), i32 %34)
  %36 = load i32, i32* %2, align 4
  call void @srand(i32 %36) #2
  store i32 0, i32* %i1, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 4)
  br label %37

; <label>:37                                      ; preds = %51, %33
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 5)
  %38 = load i32, i32* %i1, align 4
  %39 = icmp slt i32 %38, 50
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 5)
  br i1 %39, label %40, label %54

; <label>:40                                      ; preds = %37
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 6)
  %41 = call i32 @rand() #2
  %42 = load i32, i32* %total_sz, align 4
  %43 = sub nsw i32 %42, 2000
  %44 = srem i32 %41, %43
  %45 = load i32, i32* %i1, align 4
  %46 = getelementptr inbounds [50 x i32], [50 x i32]* %random_locations, i32 0, i32 %45
  store i32 %44, i32* %46, align 4
  %47 = load i32, i32* %i1, align 4
  %48 = getelementptr inbounds [50 x i32], [50 x i32]* %random_locations, i32 0, i32 %47
  %49 = load i32, i32* %48, align 4
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 %49)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 6)
  br label %51

; <label>:51                                      ; preds = %40
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 7)
  %52 = load i32, i32* %i1, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %i1, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 7)
  br label %37

; <label>:54                                      ; preds = %37
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 8)
  %55 = getelementptr inbounds [200 x %struct.library], [200 x %struct.library]* %libs, i32 0, i32 0
  %56 = getelementptr inbounds [50 x i32], [50 x i32]* %random_locations, i32 0, i32 0
  %57 = load i8*, i8** %1, align 4
  call void @__CFI_INTERNAL_CALL(i32 0)
  call void @calculate_random_checksum(%struct.library* %55, i32* %56, i8* %57)
  call void @__CFI_INTERNAL_RETURNED(i32 0)
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0))
  store i32 0, i32* %i2, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 8)
  br label %59

; <label>:59                                      ; preds = %69, %54
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 9)
  %60 = load i32, i32* %i2, align 4
  %61 = icmp slt i32 %60, 32
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 9)
  br i1 %61, label %62, label %72

; <label>:62                                      ; preds = %59
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 10)
  %63 = load i32, i32* %i2, align 4
  %64 = load i8*, i8** %1, align 4
  %65 = getelementptr inbounds i8, i8* %64, i32 %63
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 %67)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 10)
  br label %69

; <label>:69                                      ; preds = %62
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 11)
  %70 = load i32, i32* %i2, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %i2, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 1, i32 11)
  br label %59

; <label>:72                                      ; preds = %59
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 1, i32 12)
  %73 = call i32 @putchar(i32 10)
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 1, i8* %saved_retaddr_epilog)
  ret void
}

declare i32 @dl_iterate_phdr(i32 (%struct.dl_phdr_info*, i32, i8*)*, i8*) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind
declare void @srand(i32) #0

; Function Attrs: nounwind
declare i32 @rand() #0

declare i32 @putchar(i32) #1

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #0

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* nocapture, i8* nocapture readonly, i32, i32, i1) #2

; Function Attrs: nounwind
define internal i32 @callback_set_lib_addr(%struct.dl_phdr_info* %info, i32 %size, i8* %data) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 2, i8* %saved_retaddr_prolog)
  %1 = alloca %struct.dl_phdr_info*, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  %libs = alloca %struct.library*, align 4
  %header_id = alloca i32, align 4
  %hdr = alloca %struct.Elf32_Phdr*, align 4
  %addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.dl_phdr_info* %info, %struct.dl_phdr_info** %1, align 4
  store i32 %size, i32* %2, align 4
  store i8* %data, i8** %3, align 4
  %4 = load i8*, i8** %3, align 4
  %5 = bitcast i8* %4 to %struct.library*
  store %struct.library* %5, %struct.library** %libs, align 4
  store i32 0, i32* %header_id, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 0)
  br label %6

; <label>:6                                       ; preds = %124, %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 1)
  %7 = load i32, i32* %header_id, align 4
  %8 = load %struct.dl_phdr_info*, %struct.dl_phdr_info** %1, align 4
  %9 = getelementptr inbounds %struct.dl_phdr_info, %struct.dl_phdr_info* %8, i32 0, i32 3
  %10 = load i16, i16* %9, align 2
  %11 = zext i16 %10 to i32
  %12 = icmp slt i32 %7, %11
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 1)
  br i1 %12, label %13, label %127

; <label>:13                                      ; preds = %6
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 2)
  %14 = load i32, i32* %header_id, align 4
  %15 = load %struct.dl_phdr_info*, %struct.dl_phdr_info** %1, align 4
  %16 = getelementptr inbounds %struct.dl_phdr_info, %struct.dl_phdr_info* %15, i32 0, i32 2
  %17 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %16, align 4
  %18 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %17, i32 %14
  store %struct.Elf32_Phdr* %18, %struct.Elf32_Phdr** %hdr, align 4
  %19 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %hdr, align 4
  %20 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %19, i32 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 2)
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %13
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 3)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 3)
  br label %124

; <label>:24                                      ; preds = %13
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 4)
  %25 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %hdr, align 4
  %26 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %25, i32 0, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = and i32 %27, 5
  %29 = icmp ne i32 %28, 5
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 4)
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %24
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 5)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 5)
  br label %124

; <label>:31                                      ; preds = %24
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 6)
  %32 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %hdr, align 4
  %33 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %32, i32 0, i32 6
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 2
  %36 = icmp ne i32 %35, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 6)
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %31
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 7)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 7)
  br label %124

; <label>:38                                      ; preds = %31
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 8)
  %39 = load %struct.dl_phdr_info*, %struct.dl_phdr_info** %1, align 4
  %40 = getelementptr inbounds %struct.dl_phdr_info, %struct.dl_phdr_info* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %hdr, align 4
  %43 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %42, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %41, %44
  store i32 %45, i32* %addr, align 4
  %46 = load i32, i32* @num_libs, align 4
  %47 = icmp eq i32 %46, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 8)
  br i1 %47, label %48, label %70

; <label>:48                                      ; preds = %38
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 9)
  %49 = load i32, i32* @num_libs, align 4
  %50 = load %struct.library*, %struct.library** %libs, align 4
  %51 = getelementptr inbounds %struct.library, %struct.library* %50, i32 %49
  %52 = getelementptr inbounds %struct.library, %struct.library* %51, i32 0, i32 0
  %53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %52, i32 0, i32 0
  %54 = load %struct.dl_phdr_info*, %struct.dl_phdr_info** %1, align 4
  %55 = getelementptr inbounds %struct.dl_phdr_info, %struct.dl_phdr_info* %54, i32 0, i32 1
  %56 = load i8*, i8** %55, align 4
  %57 = call i8* @strcpy(i8* %53, i8* %56) #2
  %58 = load i32, i32* %addr, align 4
  %59 = load i32, i32* @num_libs, align 4
  %60 = load %struct.library*, %struct.library** %libs, align 4
  %61 = getelementptr inbounds %struct.library, %struct.library* %60, i32 %59
  %62 = getelementptr inbounds %struct.library, %struct.library* %61, i32 0, i32 1
  store i32 %58, i32* %62, align 4
  %63 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %hdr, align 4
  %64 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %63, i32 0, i32 5
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* @num_libs, align 4
  %67 = load %struct.library*, %struct.library** %libs, align 4
  %68 = getelementptr inbounds %struct.library, %struct.library* %67, i32 %66
  %69 = getelementptr inbounds %struct.library, %struct.library* %68, i32 0, i32 2
  store i32 %65, i32* %69, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 9)
  br label %121

; <label>:70                                      ; preds = %38
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 10)
  %71 = load i32, i32* @num_libs, align 4
  store i32 %71, i32* %i, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 10)
  br label %72

; <label>:72                                      ; preds = %117, %70
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 11)
  %73 = load i32, i32* %i, align 4
  %74 = icmp sgt i32 %73, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 11)
  br i1 %74, label %75, label %120

; <label>:75                                      ; preds = %72
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 12)
  %76 = load i32, i32* %addr, align 4
  %77 = load i32, i32* %i, align 4
  %78 = sub nsw i32 %77, 1
  %79 = load %struct.library*, %struct.library** %libs, align 4
  %80 = getelementptr inbounds %struct.library, %struct.library* %79, i32 %78
  %81 = getelementptr inbounds %struct.library, %struct.library* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %76, %82
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 12)
  br i1 %83, label %84, label %94

; <label>:84                                      ; preds = %75
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 13)
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.library*, %struct.library** %libs, align 4
  %87 = getelementptr inbounds %struct.library, %struct.library* %86, i32 %85
  %88 = load i32, i32* %i, align 4
  %89 = sub nsw i32 %88, 1
  %90 = load %struct.library*, %struct.library** %libs, align 4
  %91 = getelementptr inbounds %struct.library, %struct.library* %90, i32 %89
  %92 = bitcast %struct.library* %87 to i8*
  %93 = bitcast %struct.library* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %92, i8* %93, i32 4104, i32 4, i1 false)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 13)
  br label %116

; <label>:94                                      ; preds = %75
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 14)
  %95 = load i32, i32* %i, align 4
  %96 = load %struct.library*, %struct.library** %libs, align 4
  %97 = getelementptr inbounds %struct.library, %struct.library* %96, i32 %95
  %98 = getelementptr inbounds %struct.library, %struct.library* %97, i32 0, i32 0
  %99 = getelementptr inbounds [4096 x i8], [4096 x i8]* %98, i32 0, i32 0
  %100 = load %struct.dl_phdr_info*, %struct.dl_phdr_info** %1, align 4
  %101 = getelementptr inbounds %struct.dl_phdr_info, %struct.dl_phdr_info* %100, i32 0, i32 1
  %102 = load i8*, i8** %101, align 4
  %103 = call i8* @strcpy(i8* %99, i8* %102) #2
  %104 = load i32, i32* %addr, align 4
  %105 = load i32, i32* %i, align 4
  %106 = load %struct.library*, %struct.library** %libs, align 4
  %107 = getelementptr inbounds %struct.library, %struct.library* %106, i32 %105
  %108 = getelementptr inbounds %struct.library, %struct.library* %107, i32 0, i32 1
  store i32 %104, i32* %108, align 4
  %109 = load %struct.Elf32_Phdr*, %struct.Elf32_Phdr** %hdr, align 4
  %110 = getelementptr inbounds %struct.Elf32_Phdr, %struct.Elf32_Phdr* %109, i32 0, i32 5
  %111 = load i32, i32* %110, align 4
  %112 = load i32, i32* %i, align 4
  %113 = load %struct.library*, %struct.library** %libs, align 4
  %114 = getelementptr inbounds %struct.library, %struct.library* %113, i32 %112
  %115 = getelementptr inbounds %struct.library, %struct.library* %114, i32 0, i32 2
  store i32 %111, i32* %115, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 14)
  br label %120

; <label>:116                                     ; preds = %84
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 15)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 15)
  br label %117

; <label>:117                                     ; preds = %116
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 16)
  %118 = load i32, i32* %i, align 4
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %i, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 16)
  br label %72

; <label>:120                                     ; preds = %94, %72
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 17)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 17)
  br label %121

; <label>:121                                     ; preds = %120, %48
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 18)
  %122 = load i32, i32* @num_libs, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* @num_libs, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 18)
  br label %124

; <label>:124                                     ; preds = %121, %37, %30, %23
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 19)
  %125 = load i32, i32* %header_id, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %header_id, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 2, i32 19)
  br label %6

; <label>:127                                     ; preds = %6
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 2, i32 20)
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 2, i8* %saved_retaddr_epilog)
  ret i32 0
}

; Function Attrs: nounwind
define i8* @checksum(i8* %vargp) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 3, i8* %saved_retaddr_prolog)
  %1 = alloca i8*, align 4
  %2 = alloca i8*, align 4
  %sockfd = alloca i32, align 4
  %hash_value = alloca [32 x i8], align 1
  %buffer = alloca [1024 x i8], align 1
  %servaddr = alloca %struct.sockaddr_in, align 4
  %cliaddr = alloca %struct.sockaddr_in, align 4
  %len = alloca i32, align 4
  %n = alloca i32, align 4
  %seed = alloca i32, align 4
  store i8* %vargp, i8** %2, align 4
  %3 = bitcast %struct.sockaddr_in* %servaddr to i8*
  call void @llvm.memset.p0i8.i32(i8* %3, i8 0, i32 16, i32 4, i1 false)
  %4 = bitcast %struct.sockaddr_in* %cliaddr to i8*
  call void @llvm.memset.p0i8.i32(i8* %4, i8 0, i32 16, i32 4, i1 false)
  %5 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %servaddr, i32 0, i32 0
  store i16 2, i16* %5, align 2
  %6 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %servaddr, i32 0, i32 2
  %7 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %6, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = call zeroext i16 @htons(i16 zeroext 8080) #6
  %9 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %servaddr, i32 0, i32 1
  store i16 %8, i16* %9, align 2
  %10 = call i32 @socket(i32 2, i32 2, i32 0) #2
  store i32 %10, i32* %sockfd, align 4
  %11 = load i32, i32* %sockfd, align 4
  %12 = bitcast %struct.sockaddr_in* %servaddr to %struct.sockaddr*
  %13 = call i32 @bind(i32 %11, %struct.sockaddr* %12, i32 16) #2
  %14 = icmp slt i32 %13, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 3, i32 0)
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 3, i32 1)
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0))
  call void @exit(i32 1) #7
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 3, i32 1)
  unreachable

; <label>:16                                      ; preds = %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 3, i32 2)
  store i32 16, i32* %len, align 4
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 3, i32 2)
  br label %17

; <label>:17                                      ; preds = %23, %16
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 3, i32 3)
  %18 = load i32, i32* %sockfd, align 4
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0
  %20 = bitcast %struct.sockaddr_in* %cliaddr to %struct.sockaddr*
  %21 = call i32 @recvfrom(i32 %18, i8* %19, i32 1024, i32 256, %struct.sockaddr* %20, i32* %len)
  %22 = icmp ne i32 %21, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 3, i32 3)
  br i1 %22, label %23, label %33

; <label>:23                                      ; preds = %17
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 3, i32 4)
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buffer, i32 0, i32 0
  %25 = call i32 @atoi(i8* %24) #8
  store i32 %25, i32* %seed, align 4
  %26 = getelementptr inbounds [32 x i8], [32 x i8]* %hash_value, i32 0, i32 0
  %27 = load i32, i32* %seed, align 4
  call void @__CFI_INTERNAL_CALL(i32 1)
  call void @calculate_checksum(i8* %26, i32 %27)
  call void @__CFI_INTERNAL_RETURNED(i32 1)
  %28 = load i32, i32* %sockfd, align 4
  %29 = getelementptr inbounds [32 x i8], [32 x i8]* %hash_value, i32 0, i32 0
  %30 = bitcast %struct.sockaddr_in* %cliaddr to %struct.sockaddr*
  %31 = load i32, i32* %len, align 4
  %32 = call i32 @sendto(i32 %28, i8* %29, i32 32, i32 2048, %struct.sockaddr* %30, i32 %31)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 3, i32 4)
  br label %17

; <label>:33                                      ; preds = %17
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 3, i32 5)
  %34 = load i8*, i8** %1
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 3, i8* %saved_retaddr_epilog)
  ret i8* %34
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #2

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #3

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #0

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #0

declare void @perror(i8*) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

declare i32 @recvfrom(i32, i8*, i32, i32, %struct.sockaddr*, i32*) #1

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

declare i32 @sendto(i32, i8*, i32, i32, %struct.sockaddr*, i32) #1

; Function Attrs: nounwind
define void @vulnerable_main(i8* %arg) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 4, i8* %saved_retaddr_prolog)
  %1 = alloca i8*, align 4
  %buff = alloca [300 x i8], align 1
  store i8* %arg, i8** %1, align 4
  %2 = load i8*, i8** %1, align 4
  %3 = call i32 @strlen(i8* %2) #8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.6, i32 0, i32 0), i32 %3)
  %5 = getelementptr inbounds [300 x i8], [300 x i8]* %buff, i32 0, i32 0
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.7, i32 0, i32 0), i8* %5)
  %7 = getelementptr inbounds [300 x i8], [300 x i8]* %buff, i32 0, i32 0
  %8 = load i8*, i8** %1, align 4
  %9 = call i8* @strcpy(i8* %7, i8* %8) #2
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 4, i8* %saved_retaddr_epilog)
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strlen(i8*) #5

; Function Attrs: nounwind
define void @vulnerable(i8* %arg) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 5, i8* %saved_retaddr_prolog)
  %1 = alloca i8*, align 4
  store i8* %arg, i8** %1, align 4
  %2 = load i8*, i8** %1, align 4
  call void @__CFI_INTERNAL_CALL(i32 4)
  call void @vulnerable_main(i8* %2)
  call void @__CFI_INTERNAL_RETURNED(i32 4)
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.8, i32 0, i32 0))
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.9, i32 0, i32 0))
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.10, i32 0, i32 0))
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 5, i8* %saved_retaddr_epilog)
  ret void
}

; Function Attrs: nounwind
define void @set_customer_info(i8* %name, i8* %addr) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 6, i8* %saved_retaddr_prolog)
  %1 = alloca i8*, align 4
  %2 = alloca i8*, align 4
  %a = alloca i8*, align 4
  %cust = alloca %struct.Customer*, align 4
  store i8* %name, i8** %1, align 4
  store i8* %addr, i8** %2, align 4
  %3 = call noalias i8* @malloc(i32 500) #2
  store i8* %3, i8** %a, align 4
  %4 = call noalias i8* @malloc(i32 104) #2
  %5 = bitcast i8* %4 to %struct.Customer*
  store %struct.Customer* %5, %struct.Customer** %cust, align 4
  %6 = load %struct.Customer*, %struct.Customer** %cust, align 4
  %7 = getelementptr inbounds %struct.Customer, %struct.Customer* %6, i32 0, i32 0
  %8 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i32 0, i32 0
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* %8)
  %10 = call noalias i8* @malloc(i32 12) #2
  %11 = load %struct.Customer*, %struct.Customer** %cust, align 4
  %12 = getelementptr inbounds %struct.Customer, %struct.Customer* %11, i32 0, i32 1
  store i8* %10, i8** %12, align 4
  %13 = load %struct.Customer*, %struct.Customer** %cust, align 4
  %14 = getelementptr inbounds %struct.Customer, %struct.Customer* %13, i32 0, i32 0
  %15 = getelementptr inbounds [100 x i8], [100 x i8]* %14, i32 0, i32 0
  %16 = load i8*, i8** %2, align 4
  %17 = call i8* @strcpy(i8* %15, i8* %16) #2
  %18 = load %struct.Customer*, %struct.Customer** %cust, align 4
  %19 = getelementptr inbounds %struct.Customer, %struct.Customer* %18, i32 0, i32 1
  %20 = load i8*, i8** %19, align 4
  %21 = load i8*, i8** %1, align 4
  %22 = call i8* @strcpy(i8* %20, i8* %21) #2
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i32 0, i32 0))
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 6, i8* %saved_retaddr_epilog)
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i32) #0

; Function Attrs: nounwind
define i32 @main(i32 %argc, i8** %argv) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 7, i8* %saved_retaddr_prolog)
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 4
  %tid = alloca i32, align 4
  %addr = alloca %struct.sockaddr_in, align 4
  %client = alloca i32, align 4
  %buf = alloca [1024 x i8], align 1
  %sock = alloca i32, align 4
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 4
  %4 = load i32, i32* %2, align 4
  %5 = icmp ne i32 %4, 2
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 0)
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 1)
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i32 0, i32 0))
  store i32 0, i32* %1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 1)
  br label %114

; <label>:8                                       ; preds = %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 2)
  %9 = load i8**, i8*** %3, align 4
  %10 = getelementptr inbounds i8*, i8** %9, i32 1
  %11 = load i8*, i8** %10, align 4
  %12 = call i32 @atoi(i8* %11) #8
  store i32 %12, i32* @attack_type, align 4
  %13 = call i32 @pthread_create(i32* %tid, %union.pthread_attr_t* null, i8* (i8*)* @checksum, i8* null) #2
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0))
  %15 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %addr, i32 0, i32 0
  store i16 2, i16* %15, align 2
  %16 = call zeroext i16 @htons(i16 zeroext 5555) #6
  %17 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %addr, i32 0, i32 1
  store i16 %16, i16* %17, align 2
  %18 = call i32 @htonl(i32 0) #6
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %addr, i32 0, i32 2
  %20 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %19, i32 0, i32 0
  store i32 %18, i32* %20, align 4
  %21 = call i32 @bcm2835_init()
  %22 = icmp ne i32 %21, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 2)
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %8
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 3)
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0))
  store i32 1, i32* %1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 3)
  br label %114

; <label>:25                                      ; preds = %8
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 4)
  call void @bcm2835_gpio_fsel(i8 zeroext 2, i8 zeroext 1)
  call void @bcm2835_gpio_write(i8 zeroext 2, i8 zeroext 1)
  call void @bcm2835_gpio_fsel(i8 zeroext 3, i8 zeroext 1)
  call void @bcm2835_gpio_write(i8 zeroext 3, i8 zeroext 1)
  call void @bcm2835_gpio_fsel(i8 zeroext 4, i8 zeroext 1)
  call void @bcm2835_gpio_write(i8 zeroext 4, i8 zeroext 1)
  call void @bcm2835_gpio_fsel(i8 zeroext 17, i8 zeroext 1)
  call void @bcm2835_gpio_write(i8 zeroext 17, i8 zeroext 1)
  call void @bcm2835_gpio_fsel(i8 zeroext 27, i8 zeroext 1)
  call void @bcm2835_gpio_write(i8 zeroext 27, i8 zeroext 1)
  %26 = call i32 @socket(i32 2, i32 1, i32 0) #2
  store i32 %26, i32* %sock, align 4
  %27 = load i32, i32* %sock, align 4
  %28 = icmp slt i32 %27, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 4)
  br i1 %28, label %29, label %31

; <label>:29                                      ; preds = %25
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 5)
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i32 0, i32 0))
  store i32 1, i32* %1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 5)
  br label %114

; <label>:31                                      ; preds = %25
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 6)
  %32 = load i32, i32* %sock, align 4
  %33 = bitcast %struct.sockaddr_in* %addr to %struct.sockaddr*
  %34 = call i32 @bind(i32 %32, %struct.sockaddr* %33, i32 16) #2
  %35 = icmp slt i32 %34, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 6)
  br i1 %35, label %36, label %38

; <label>:36                                      ; preds = %31
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 7)
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i32 0, i32 0))
  store i32 2, i32* %1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 7)
  br label %114

; <label>:38                                      ; preds = %31
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 8)
  %39 = load i32, i32* %sock, align 4
  %40 = call i32 @listen(i32 %39, i32 5) #2
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 8)
  br label %41

; <label>:41                                      ; preds = %38, %113
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 9)
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i32 0, i32 0))
  %43 = load i32, i32* %sock, align 4
  %44 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  call void @__CFI_INTERNAL_CALL(i32 8)
  call void @accept_command(i32 %43, i8* %44)
  call void @__CFI_INTERNAL_RETURNED(i32 8)
  %45 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i8* %45)
  %47 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %48 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0)) #8
  %49 = icmp eq i32 %48, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 9)
  br i1 %49, label %50, label %58

; <label>:50                                      ; preds = %41
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 10)
  %51 = load i32, i32* @LAMP_1, align 4
  %52 = icmp eq i32 %51, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 10)
  br i1 %52, label %53, label %55

; <label>:53                                      ; preds = %50
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 11)
  call void @bcm2835_gpio_write(i8 zeroext 2, i8 zeroext 0)
  store i32 1, i32* @LAMP_1, align 4
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 11)
  br label %57

; <label>:55                                      ; preds = %50
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 12)
  call void @bcm2835_gpio_write(i8 zeroext 2, i8 zeroext 1)
  store i32 0, i32* @LAMP_1, align 4
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 12)
  br label %57

; <label>:57                                      ; preds = %55, %53
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 13)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 13)
  br label %58

; <label>:58                                      ; preds = %57, %41
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 14)
  %59 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %60 = call i32 @strcmp(i8* %59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0)) #8
  %61 = icmp eq i32 %60, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 14)
  br i1 %61, label %62, label %70

; <label>:62                                      ; preds = %58
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 15)
  %63 = load i32, i32* @LAMP_2, align 4
  %64 = icmp eq i32 %63, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 15)
  br i1 %64, label %65, label %67

; <label>:65                                      ; preds = %62
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 16)
  call void @bcm2835_gpio_write(i8 zeroext 3, i8 zeroext 0)
  store i32 1, i32* @LAMP_2, align 4
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 16)
  br label %69

; <label>:67                                      ; preds = %62
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 17)
  call void @bcm2835_gpio_write(i8 zeroext 3, i8 zeroext 1)
  store i32 0, i32* @LAMP_2, align 4
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 17)
  br label %69

; <label>:69                                      ; preds = %67, %65
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 18)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 18)
  br label %70

; <label>:70                                      ; preds = %69, %58
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 19)
  %71 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %72 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0)) #8
  %73 = icmp eq i32 %72, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 19)
  br i1 %73, label %74, label %82

; <label>:74                                      ; preds = %70
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 20)
  %75 = load i32, i32* @LAMP_3, align 4
  %76 = icmp eq i32 %75, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 20)
  br i1 %76, label %77, label %79

; <label>:77                                      ; preds = %74
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 21)
  call void @bcm2835_gpio_write(i8 zeroext 4, i8 zeroext 0)
  store i32 1, i32* @LAMP_3, align 4
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 21)
  br label %81

; <label>:79                                      ; preds = %74
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 22)
  call void @bcm2835_gpio_write(i8 zeroext 4, i8 zeroext 1)
  store i32 0, i32* @LAMP_3, align 4
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 22)
  br label %81

; <label>:81                                      ; preds = %79, %77
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 23)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 23)
  br label %82

; <label>:82                                      ; preds = %81, %70
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 24)
  %83 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %84 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0)) #8
  %85 = icmp eq i32 %84, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 24)
  br i1 %85, label %86, label %94

; <label>:86                                      ; preds = %82
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 25)
  %87 = load i32, i32* @LAMP_4, align 4
  %88 = icmp eq i32 %87, 1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 25)
  br i1 %88, label %89, label %91

; <label>:89                                      ; preds = %86
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 26)
  call void @bcm2835_gpio_write(i8 zeroext 17, i8 zeroext 1)
  store i32 0, i32* @LAMP_4, align 4
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 26)
  br label %93

; <label>:91                                      ; preds = %86
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 27)
  call void @bcm2835_gpio_write(i8 zeroext 17, i8 zeroext 0)
  store i32 1, i32* @LAMP_4, align 4
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 27)
  br label %93

; <label>:93                                      ; preds = %91, %89
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 28)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 28)
  br label %94

; <label>:94                                      ; preds = %93, %82
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 29)
  %95 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %96 = call i32 @strcmp(i8* %95, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0)) #8
  %97 = icmp eq i32 %96, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 29)
  br i1 %97, label %98, label %106

; <label>:98                                      ; preds = %94
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 30)
  %99 = load i32, i32* @LAMP_5, align 4
  %100 = icmp eq i32 %99, 1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 30)
  br i1 %100, label %101, label %103

; <label>:101                                     ; preds = %98
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 31)
  call void @bcm2835_gpio_write(i8 zeroext 27, i8 zeroext 1)
  store i32 0, i32* @LAMP_5, align 4
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 31)
  br label %105

; <label>:103                                     ; preds = %98
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 32)
  call void @bcm2835_gpio_write(i8 zeroext 27, i8 zeroext 0)
  store i32 1, i32* @LAMP_5, align 4
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i32 0, i32 0))
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 32)
  br label %105

; <label>:105                                     ; preds = %103, %101
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 33)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 33)
  br label %106

; <label>:106                                     ; preds = %105, %94
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 34)
  %107 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buf, i32 0, i32 0
  %108 = call i32 @strcmp(i8* %107, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0)) #8
  %109 = icmp eq i32 %108, 0
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 34)
  br i1 %109, label %110, label %113

; <label>:110                                     ; preds = %106
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 35)
  %111 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0))
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.32, i32 0, i32 0))
  store i32 0, i32* %1
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 35)
  br label %114

; <label>:113                                     ; preds = %106
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 36)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 7, i32 36)
  br label %41

; <label>:114                                     ; preds = %110, %36, %29, %23, %6
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 7, i32 37)
  %115 = load i32, i32* %1
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 7, i8* %saved_retaddr_epilog)
  ret i32 %115
}

; Function Attrs: nounwind
declare i32 @pthread_create(i32*, %union.pthread_attr_t*, i8* (i8*)*, i8*) #0

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #3

declare i32 @bcm2835_init() #1

declare void @bcm2835_gpio_fsel(i8 zeroext, i8 zeroext) #1

declare void @bcm2835_gpio_write(i8 zeroext, i8 zeroext) #1

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #0

; Function Attrs: nounwind
define void @accept_command(i32 %mainSock, i8* %string) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 8, i8* %saved_retaddr_prolog)
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 4
  %client = alloca i32, align 4
  %buff = alloca [1024 x i8], align 1
  %received = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %mainSock, i32* %1, align 4
  store i8* %string, i8** %2, align 4
  %3 = load i32, i32* %1, align 4
  %4 = call i32 @accept(i32 %3, %struct.sockaddr* null, i32* null)
  store i32 %4, i32* %client, align 4
  %5 = bitcast [1024 x i8]* %buff to i8*
  call void @llvm.memset.p0i8.i32(i8* %5, i8 0, i32 1024, i32 1, i1 false)
  %6 = load i32, i32* @attack_type, align 4
  %7 = icmp eq i32 %6, 3
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 8, i32 0)
  br i1 %7, label %8, label %17

; <label>:8                                       ; preds = %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 8, i32 1)
  %9 = load i32, i32* %client, align 4
  %10 = call i32 @recv(i32 %9, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @exploit, i32 0, i32 0), i32 104, i32 0)
  store i32 %10, i32* %received, align 4
  %11 = load i32, i32* %received, align 4
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i32 0, i32 0), i32 %11)
  %13 = load i32, i32* %client, align 4
  %14 = call i32 @recv(i32 %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @name, i32 0, i32 0), i32 4, i32 0)
  store i32 %14, i32* %n, align 4
  %15 = load i32, i32* %n, align 4
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i32 0, i32 0), i32 %15)
  call void @__CFI_INTERNAL_CALL(i32 6)
  call void @set_customer_info(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @name, i32 0, i32 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @exploit, i32 0, i32 0))
  call void @__CFI_INTERNAL_RETURNED(i32 6)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 8, i32 1)
  br label %22

; <label>:17                                      ; preds = %0
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 8, i32 2)
  %18 = load i32, i32* %client, align 4
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buff, i32 0, i32 0
  %20 = call i32 @recv(i32 %18, i8* %19, i32 1024, i32 0)
  store i32 %20, i32* %received, align 4
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buff, i32 0, i32 0
  call void @__CFI_INTERNAL_CALL(i32 5)
  call void @vulnerable(i8* %21)
  call void @__CFI_INTERNAL_RETURNED(i32 5)
  call void @__CFI_INTERNAL_BB_BEFORE_BR(i32 8, i32 2)
  br label %22

; <label>:22                                      ; preds = %17, %8
  call void @__CFI_INTERNAL_BB_AFTER_BR(i32 8, i32 3)
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i32 0, i32 0))
  store i32 0, i32* %received, align 4
  %24 = load i32, i32* %received, align 4
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buff, i32 0, i32 %24
  store i8 0, i8* %25, align 1
  %26 = load i8*, i8** %2, align 4
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %buff, i32 0, i32 0
  %28 = call i8* @strcpy(i8* %26, i8* %27) #2
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 8, i8* %saved_retaddr_epilog)
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

declare i32 @system(i8*) #1

; Function Attrs: nounwind
define void @lamp_on(i32 %num) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 9, i8* %saved_retaddr_prolog)
  %1 = alloca i32, align 4
  store i32 %num, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = trunc i32 %2 to i8
  call void @bcm2835_gpio_write(i8 zeroext %3, i8 zeroext 0)
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 9, i8* %saved_retaddr_epilog)
  ret void
}

; Function Attrs: nounwind
define void @lamp_off(i32 %num) #0 {
  %saved_retaddr_prolog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_ENTER(i32 10, i8* %saved_retaddr_prolog)
  %1 = alloca i32, align 4
  store i32 %num, i32* %1, align 4
  %2 = load i32, i32* %1, align 4
  %3 = trunc i32 %2 to i8
  call void @bcm2835_gpio_write(i8 zeroext %3, i8 zeroext 1)
  %saved_retaddr_epilog = call i8* @llvm.returnaddress(i32 0)
  call void @__CFI_INTERNAL_EXIT(i32 10, i8* %saved_retaddr_epilog)
  ret void
}

declare i32 @accept(i32, %struct.sockaddr*, i32*) #1

declare i32 @recv(i32, i8*, i32, i32) #1

declare i32 @__FORK_WRAPPER(i32)

declare void @__CFI_INTERNAL_BB_AFTER_BR(i32, i32)

declare void @__CFI_INTERNAL_BB_BEFORE_BR(i32, i32)

declare void @__CFI_INTERNAL_ENTER(i32, i8*)

declare void @__CFI_INTERNAL_EXIT(i32, i8*)

declare void @__CFI_INTERNAL_CALL(i32)

declare void @__CFI_INTERNAL_RETURNED(i32)

declare void @__CFI_INTERNAL_FORK_SON(i32)

; Function Attrs: nounwind readnone
declare i8* @llvm.returnaddress(i32) #6

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+neon,+vfp3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+neon,+vfp3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+neon,+vfp3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+neon,+vfp3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-a8" "target-features"="+neon,+vfp3" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.ident = !{!0, !0}
!llvm.module.flags = !{!1, !2}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{i32 1, !"min_enum_size", i32 4}
